package Qublog::Schema::Result::JournalDay;
use Moose;
extends qw( Qublog::Schema::Result );

with qw( Qublog::Schema::Role::Itemized );

=head1 NAME

Qublog::Schema::Result::JournalDay - every day gets one of these

=head1 DESCRIPTION

Each calendar day is represented by one of these. While the date value is stored as a UTC time zone date, we treat this as a floating time value--i.e., whatever that particular date on the calendar means to the user who needs it.

=head1 SCHEMA

=head2 id

The autogenerated ID column.

=head2 datestamp

The day of the journal day. This is also a unique key column.

=head2 journal_entries

A result set of the L<Qublog::Schema::Result::JournalEntry> objects on this day.

=head2 journal_timers

A result set of the L<Qublog::Schema::Result::JournalTimer> objects on this day.

=head2 comments

A result set of the L<Qublog::Schema::Result::Comment> objects on this day.

=cut

__PACKAGE__->load_components(qw( InflateColumn::DateTime Core ));
__PACKAGE__->table('journal_days');
__PACKAGE__->add_columns(
    id        => { data_type => 'int' },
    datestamp => { data_type => 'date' },
);
__PACKAGE__->set_primary_key('id');
__PACKAGE__->add_unique_constraint(
    datestamp => [ qw( datestamp ) ],
);
__PACKAGE__->has_many( journal_entries => 'Qublog::Schema::Result::JournalEntry', 'journal_day' );
__PACKAGE__->many_to_many( journal_timers => journal_entries => 'journal_timers' );
__PACKAGE__->has_many( comments => 'Qublog::Schema::Result::Comment', 'journal_day' );
__PACKAGE__->resultset_class('Qublog::Schema::ResultSet::JournalDay');

=head1 METHODS

=head2 is_today

  if ($day->is_today($c->today)) {
     # do something for today
  }

This method takes a single argument, a L<DateTime> representing the day you want to match up. If not given, C<< Qublog::DateTime->today >> is used.

This returns true of the year, month, and day of the L</datestamp> matches the same of the L<DateTime> given, without respect to time zone.

=cut

sub is_today {
    my ($self, $today) = @_;
    $today ||= Qublog::DateTime->today;
    
    my $datestamp = $self->datestamp;
    return $datestamp->ymd eq $today->ymd;
}

=head2 as_journal_item

Does nothing. See L<Qublog::Schema::Role::Itemized>.

=cut

sub as_journal_item {}

=head2 list_journal_item_resultsets

Returns the journal entries for the user passed in the options.

=cut

sub list_journal_item_resultsets {
    my ($self, $options) = @_;

    return [] unless $options->{user};

    my $entries = $self->journal_entries({
        owner => $options->{user}->get_object->id,
    }, {
        order_by => { -asc => 'start_time' },
    });

    return [ $entries ];
}

=head1 SEE ALSO

L<Qublog::Schema::ResultSet::JournalDay>

=head1 AUTHOR

Andrew Sterling Hanenkamp, C<< <hanenkamp@cpan.org> >>

=head1 LICENSE

Qublog Personal/Professional Journaling
Copyright (C) 2009  Andrew Sterling Hanenkamp

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut

1;
